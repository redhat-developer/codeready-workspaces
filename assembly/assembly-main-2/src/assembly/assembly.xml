<!--

    Copyright (c) 2018 Red Hat, Inc.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

-->
<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">
    <id>tomcat-zip</id>
    <formats>
        <format>dir</format>
        <format>zip</format>
        <format>tar.gz</format>
    </formats>
    <dependencySets>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>tomcat/webapps</outputDirectory>
            <outputFileNameMapping>ROOT.war</outputFileNameMapping>
            <includes>
                <include>org.eclipse.che:assembly-ide-war</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>tomcat/webapps</outputDirectory>
            <outputFileNameMapping>api.war</outputFileNameMapping>
            <includes>
                <include>org.eclipse.che:assembly-wsmaster-war</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>tomcat/webapps</outputDirectory>
            <outputFileNameMapping>dashboard.war</outputFileNameMapping>
            <includes>
                <include>org.eclipse.che.dashboard:che-dashboard-war</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>tomcat/webapps</outputDirectory>
            <outputFileNameMapping>workspace-loader.war</outputFileNameMapping>
            <includes>
                <include>org.eclipse.che:assembly-workspace-loader-war</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>tomcat/webapps</outputDirectory>
            <outputFileNameMapping>swagger.war</outputFileNameMapping>
            <includes>
                <include>org.eclipse.che.lib:che-swagger-war</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>lib</outputDirectory>
            <outputFileNameMapping>jdt.ls.tar.gz</outputFileNameMapping>
            <includes>
                <include>org.eclipse.che.ls.jdt:jdt.ls.extension.product</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>lib</outputDirectory>
            <outputFileNameMapping>ws-agent.tar.gz</outputFileNameMapping>
            <includes>
                <include>org.eclipse.che:assembly-wsagent-server</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>lib/linux_amd64/terminal</outputDirectory>
            <outputFileNameMapping>websocket-terminal-linux_amd64.tar.gz</outputFileNameMapping>
            <includes>
                <include>org.eclipse.che:terminal-agent:tar.gz:linux_amd64</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>true</unpack>
            <outputDirectory>lib/linux_amd64</outputDirectory>
            <includes>
                <include>org.eclipse.che:bootstrapper:zip:linux_amd64</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>lib/linux_amd64/exec</outputDirectory>
            <outputFileNameMapping>exec-agent-linux_amd64.tar.gz</outputFileNameMapping>
            <includes>
                <include>org.eclipse.che:exec-agent:tar.gz:linux_amd64</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>true</unpack>
            <outputDirectory>templates</outputDirectory>
            <includes>
                <include>org.eclipse.che.core:che-core-ide-templates</include>
            </includes>
            <unpackOptions>
                <excludes>
                    <exclude>META-INF/**</exclude>
                </excludes>
            </unpackOptions>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>lib</outputDirectory>
            <includes>
                <include>org.postgresql:postgresql</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>tomcat/webapps</outputDirectory>
            <outputFileNameMapping>ROOT.war</outputFileNameMapping>
            <includes>
                <include>com.redhat:codeready-ide-assembly-ide-war</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>tomcat/webapps</outputDirectory>
            <outputFileNameMapping>dashboard.war</outputFileNameMapping>
            <includes>
                <include>com.redhat:codeready-dashboard-war</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>tomcat/webapps</outputDirectory>
            <outputFileNameMapping>api.war</outputFileNameMapping>
            <includes>
                <include>com.redhat:assembly-wsmaster-war</include>
            </includes>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>true</unpack>
            <outputDirectory>templates</outputDirectory>
            <includes>
                <include>com.redhat:codeready-samples</include>
            </includes>
            <unpackOptions>
                <excludes>
                    <exclude>META-INF/**</exclude>
                </excludes>
            </unpackOptions>
        </dependencySet>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <unpack>false</unpack>
            <outputDirectory>lib</outputDirectory>
            <outputFileNameMapping>ws-agent.tar.gz</outputFileNameMapping>
            <includes>
                <include>com.redhat:codeready-workspaces-assembly-wsagent-server</include>
            </includes>
        </dependencySet>
    </dependencySets>

    <fileSets>
        <fileSet>
            <directory>${project.build.directory}/dependency/</directory>
            <outputDirectory>tomcat/</outputDirectory>
            <excludes>
                <!-- <exclude>**/tomcat/webapps/api.war</exclude> -->
                <!-- <exclude>**/tomcat/webapps/ROOT.war</exclude> -->
                <!-- <exclude>**/tomcat/webapps/dashboard.war</exclude> -->
                <exclude>**/templates/**</exclude>
                <!-- <exclude>**/lib/ws-agent.tar.gz</exclude> -->
                <exclude>bin/*.bat</exclude>
            </excludes>
       </fileSet>
       <fileSet>
            <directory>${project.basedir}/src/assembly</directory>
            <outputDirectory></outputDirectory>
            <includes>
              <include>LICENSE</include>
              <include>README</include>
           </includes>
        </fileSet>
    </fileSets>
      <files>
        <file>
            <source>${project.basedir}/src/assembly/tomcat/conf/server.xml</source>
            <outputDirectory>tomcat/conf</outputDirectory>
            <destName>server.xml</destName>
            <fileMode>755</fileMode>
        </file>
    </files>
</assembly>
