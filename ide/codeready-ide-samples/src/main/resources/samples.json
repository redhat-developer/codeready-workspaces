[
  {
    "name": "kitchensink-example",
    "displayName": "kitchensink-example",
    "path": "/kitchensink-example",
    "description": "This is the kitchensink JBoss quickstart app",
    "projectType": "maven",
    "mixins": [],
    "attributes": {
      "language": [
        "java"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/kitchensink-example.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "build",
        "type": "mvn",
        "commandLine": "export MAVEN_OPTS='-Xms200m'\nmvn -f ${current.project.path}/pom.xml clean install",
        "attributes": {
          "previewUrl": "",
          "goal": "Build"
        }
      },
      {
        "name": "build and run in debug",
        "type": "mvn",
        "commandLine": "export MAVEN_OPTS='-Xms200m'\nmvn -f ${current.project.path}/pom.xml clean install\ncp ${current.project.path}/target/*.war /opt/eap/standalone/deployments/ROOT.war\nexport JAVA_OPTS= && export JAVA_OPTS_APPEND=-Dsun.util.logging.disableCallerCheck=true && /opt/eap/bin/standalone.sh -b 0.0.0.0 --debug 8000",
        "attributes": {
          "previewUrl": "${server.eap}",
          "goal": "Run"
        }
      },
      {
        "name": "copy-war",
        "type": "mvn",
        "commandLine": "cp ${current.project.path}/target/*.war /opt/eap/standalone/deployments/ROOT.war",
        "attributes": {
          "goal": "Run"
        }
      },
      {
        "name": "hot update",
        "type": "mvn",
        "commandLine": "export MAVEN_OPTS='-Xms200m'\nmvn -f ${current.project.path}/pom.xml clean install\ncp ${current.project.path}/target/*.war /opt/eap/standalone/deployments/ROOT.war",
        "attributes": {
          "previewUrl": "${server.eap}",
          "goal": "Run"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "eap"
    ]
  },
  {
    "name": "fuse-rest-http-booster",
    "displayName": "fuse-rest-http-booster",
    "path": "/fuse-rest-http-booster",
    "description": "This booster introduces the mechanics of interacting with a remote (exposed by Apache Camel) service using the HTTP protocol.",
    "projectType": "maven",
    "mixins": [],
    "attributes": {
      "language": [
        "java"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/jboss-fuse/fuse-rest-http-booster/",
      "parameters": {}
    },
    "commands": [
      {
        "name": "build",
        "type": "mvn",
        "commandLine": "MAVEN_OPTS='-Xmx200m' && mvn -f ${current.project.path}/pom.xml clean package",
        "attributes": {
          "previewUrl": "",
          "goal": "Build"
        }
      },
      {
        "name": "run",
        "type": "mvn",
        "commandLine": "mvn -f ${current.project.path}/pom.xml spring-boot:run",
        "attributes": {
          "previewUrl": "${server.springboot}",
          "goal": "Run"
        }
      },
      {
        "name": "deploy to OpenShift",
        "type": "mvn",
        "commandLine": "mvn -f ${current.project.path}/pom.xml fabric8:deploy -Popenshift -DskipTests",
        "attributes": {
          "previewUrl": "",
          "goal": "Run"
        }
      },
      {
        "name": "debug",
        "type": "mvn",
        "commandLine": "mvn -f ${current.project.path}/pom.xml spring-boot:run -Drun.jvmArguments=\"-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005\"",
        "attributes": {
          "previewUrl": "${server.springboot}",
          "goal": "Debug"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "fuse"
    ]
  },
  {
    "name": "spring-boot-http-booster",
    "displayName": "spring-boot-http-booster",
    "path": "/spring-boot-http-booster",
    "description": "Quickstart to expose a REST Greeting endpoint using SpringBoot and Apache Tomcat in embedded mode",
    "projectType": "maven",
    "mixins": [],
    "attributes": {
      "language": [
        "java"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/snowdrop/spring-boot-http-booster",
      "parameters": {}
    },
    "commands": [
      {
        "name": "build",
        "type": "mvn",
        "commandLine": "MAVEN_OPTS='-Xmx200m' && mvn -f ${current.project.path}/pom.xml clean install",
        "attributes": {
          "previewUrl": "",
          "goal": "Build"
        }
      },
      {
        "name": "test",
        "type": "mvn",
        "commandLine": "MAVEN_OPTS='-Xmx200m' && mvn -f ${current.project.path}/pom.xml verify -DskipTests",
        "attributes": {
          "previewUrl": "",
          "goal": "Build"
        }
      },
      {
        "name": "run",
        "type": "mvn",
        "commandLine": "mvn -f ${current.project.path}/pom.xml spring-boot:run",
        "attributes": {
          "previewUrl": "${server.springboot}",
          "goal": "Run"
        }
      },
      {
        "name": "deploy to OpenShift",
        "type": "mvn",
        "commandLine": "mvn -f ${current.project.path}/pom.xml fabric8:deploy -Popenshift -DskipTests",
        "attributes": {
          "previewUrl": "${server.springboot}",
          "goal": "Run"
        }
      },
      {
        "name": "debug",
        "type": "mvn",
        "commandLine": "mvn -f ${current.project.path}/pom.xml spring-boot:run -Drun.jvmArguments=\"-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\"",
        "attributes": {
          "previewUrl": "${server.springboot}",
          "goal": "Debug"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "spring-boot"
    ]
  },
  {
    "name": "thorntail-rest-http",
    "displayName": "thorntail-rest-http",
    "path": "/thorntail-rest-http",
    "description": "Quickstart to expose a REST Greeting endpoint using Thorntail",
    "projectType": "maven",
    "mixins": [],
    "attributes": {
      "language": [
        "java"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/thorntail-examples/rest-http-redhat",
      "parameters": {}
    },
    "commands": [
      {
        "name": "build",
        "type": "mvn",
        "attributes": {
          "previewUrl": "",
          "goal": "Build"
        },
        "commandLine": "export MAVEN_OPTS='-Xms200m'\nmvn clean install -f ${current.project.path}/pom.xml -DskipTests"
      },
      {
        "name": "run",
        "type": "custom",
        "attributes": {
          "previewUrl": "${server.thorntail}",
          "goal": "Run"
        },
        "commandLine": "export MAVEN_OPTS='-Xms200m' && mvn clean install -f ${current.project.path}/pom.xml -DskipTests && cd ${current.project.path} && java -jar target/*.jar -Djava.net.preferIPv4Stack=true"
      },
      {
        "name": "debug",
        "type": "custom",
        "attributes": {
          "previewUrl": "${server.thorntail}",
          "goal": "Debug"
        },
        "commandLine": "export MAVEN_OPTS='-Xms200m' && mvn clean install -f ${current.project.path}/pom.xml -DskipTests && MAVEN_OPTS='-Xmx200m' && cd ${current.project.path} && java -agentlib:jdwp=transport=dt_socket,address=5005,server=y,suspend=n -jar target/*.jar -Djava.net.preferIPv4Stack=true"
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "thorntail"
    ]
  },
  {
    "name": "vertx-http-booster",
    "displayName": "vertx-http-booster",
    "path": "/vertx-http-booster",
    "description": "HTTP Vert.x Booster",
    "projectType": "maven",
    "mixins": [],
    "attributes": {
      "language": [
        "java"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/openshiftio-vertx-boosters/vertx-http-booster",
      "parameters": {}
    },
    "commands": [
      {
        "commandLine": "MAVEN_OPTS='-Xmx200m' && mvn clean install -f ${current.project.path}/pom.xml",
        "name": "build",
        "type": "mvn",
        "attributes": {
          "previewUrl": "",
          "goal": "Build"
        }
      },
      {
        "commandLine": "MAVEN_OPTS='-Xmx200m' && mvn verify -f ${current.project.path}/pom.xml -DskipTests",
        "name": "test",
        "type": "mvn",
        "attributes": {
          "previewUrl": "",
          "goal": "Build"
        }
      },
      {
        "commandLine": "MAVEN_OPTS='-Xmx200m' && mvn vertx:run -f ${current.project.path}/pom.xml -Dvertx.disableDnsResolver=true",
        "name": "run",
        "type": "custom",
        "attributes": {
          "previewUrl": "${server.vertx}",
          "goal": "Run"
        }
      },
      {
        "commandLine": "MAVEN_OPTS='-Xmx200m' && mvn vertx:debug -f ${current.project.path}/pom.xml -Dvertx.disableDnsResolver=true",
        "name": "debug",
        "type": "custom",
        "attributes": {
          "previewUrl": "${server.vertx}",
          "goal": "Debug"
        }
      },
      {
        "commandLine": "MAVEN_OPTS='-Xmx200m' &&  mvn fabric8:deploy -Popenshift -DskipTests -f ${current.project.path}/pom.xml -Dvertx.disableDnsResolver=true",
        "name": "deploy to OpenShift",
        "type": "custom",
        "attributes": {
          "goal": "Run"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "vert.x"
    ]
  },
  {
    "name": "dotnet-web-simple",
    "displayName": "dotnet-web-simple",
    "path": "/dotnet-web-simple",
    "description": "A simple .NET 2.1 web sample.",
    "projectType": "csharp",
    "mixins": [],
    "attributes": {
      "language": [
        "dotnet"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/dotnet-web-simple.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "update dependencies",
        "type": "custom",
        "commandLine": "cd ${current.project.path} \ndotnet restore",
        "attributes": {
          "previewUrl": "",
          "goal": "Build"
        }
      },
      {
        "name": "run",
        "type": "custom",
        "commandLine": "cd ${current.project.path} \ndotnet run",
        "attributes": {
          "previewUrl": "${server.dotnet}",
          "goal": "Run"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "Dotnet"
    ]
  },
  {
    "name": "web-php-simple",
    "displayName": "web-php-simple",
    "path": "/web-php-simple",
    "description": "A hello world PHP script.",
    "projectType": "php",
    "mixins": [],
    "attributes": {
      "language": [
        "php"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/web-php-simple.git",
      "parameters": {}
    },
    "commands": [],
    "links": [],
    "category": "Samples",
    "tags": [
      "php"
    ]
  },
  {
    "name": "cakephp-ex",
    "displayName": "cakephp-ex",
    "path": "/cakephp-ex",
    "description": "CakePHP Example",
    "projectType": "php",
    "mixins": [],
    "attributes": {
      "language": [
        "php"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/sclorg/cakephp-ex",
      "parameters": {}
    },
    "commands": [
      {
        "name": "install dependencies",
        "type": "custom",
        "commandLine": "cd ${current.project.path}\ncomposer install 2>&1",
        "attributes": {
          "previewUrl": "",
          "goal": "Run"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "php"
    ]
  },
  {
    "name": "console-python3-simple",
    "displayName": "console-python3.5-simple",
    "path": "/console-python3-simple",
    "description": "Simple Python3.5 Project.",
    "projectType": "python",
    "mixins": [],
    "attributes": {
      "language": [
        "python"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/console-python3-simple.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "run",
        "type": "custom",
        "commandLine": "cd ${current.project.path} \npython main.py",
        "attributes": {
          "previewUrl": "",
          "goal": "Run"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "python"
    ]
  },
  {
    "name": "c-simple-console",
    "displayName": "c-simple-console",
    "path": "/c-simple-console",
    "description": "A simple Hello World in C.",
    "projectType": "c",
    "mixins": [],
    "attributes": {},
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/c-simple-console.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "build and run",
        "type": "custom",
        "commandLine": "cd ${current.project.path} \ngcc -o Hello Hello.c \n./Hello",
        "attributes": {
          "previewUrl": "",
          "goal": "Run"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "c"
    ]
  },
  {
    "name": "console-cpp-simple",
    "displayName": "console-cpp-simple",
    "path": "/console-cpp-simple",
    "description": "The app will print Hello World to the console.",
    "projectType": "cpp",
    "mixins": [],
    "attributes": {
      "language": [
        "cpp"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/console-cpp-simple.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "build and run",
        "type": "custom",
        "commandLine": "cd ${current.project.path} \nmake \n./a.out",
        "attributes": {
          "previewUrl": "",
          "goal": "Run"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "cpp"
    ]
  },
  {
    "name": "web-nodejs-simple",
    "displayName": "web-nodejs-simple",
    "path": "/web-nodejs-simple",
    "description": "NodeJS Hello World",
    "projectType": "node-js",
    "mixins": [],
    "attributes": {
      "language": [
        "javascript"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/web-nodejs-sample",
      "parameters": {}
    },
    "commands": [
      {
        "name": "run",
        "type": "custom",
        "commandLine": "cd ${current.project.path} \nnode app/app.js",
        "attributes": {
          "previewUrl": "${server.3000/tcp}",
          "goal": "Run"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "nodejs"
    ]
  },
  {
    "name": "nodejs-rest-http-redhat",
    "displayName": "nodejs-rest-http-redhat",
    "path": "/nodejs-rest-http-redhat",
    "description": "Simple HTTP Rest example using express",
    "projectType": "node-js",
    "mixins": [],
    "attributes": {
      "language": [
        "javascript"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/nodeshift-starters/nodejs-rest-http-redhat/",
      "parameters": {}
    },
    "commands": [
      {
        "name": "run",
        "type": "custom",
        "commandLine": "cd ${current.project.path} && npm i && npm i @types/node && node ./bin/www",
        "attributes": {
          "previewUrl": "${server.8080/tcp}",
          "goal": "Run"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "nodejs"
    ]
  },
  {
    "name": "web-go-simple",
    "displayName": "web-go-simple",
    "path": "/web-go-simple",
    "description": "Simple Go Hello World.",
    "projectType": "golang",
    "mixins": [],
    "attributes": {
      "language": [
        "go"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/web-go-simple.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "run",
        "type": "custom",
        "commandLine": "cd ${current.project.path} \ngo get -d \ngo run main.go",
        "attributes": {
          "previewUrl": "${server.8080/tcp}",
          "goal": "Run"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "go"
    ]
  },
  {
    "name": "blank-project",
    "displayName": "blank-project",
    "path": "/blank-project",
    "description": "A blank project example.",
    "projectType": "blank",
    "mixins": [],
    "attributes": {
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/blank",
      "parameters": {}
    },
    "commands": [],
    "links": [],
    "category": "Samples",
    "tags": []
  }
]
